@model Movie
@{ Layout = "_Layout"; ViewBag.Title = "Add a Movie";}

<h2>Add a Movie <a asp-action="Index" class="btn btn-sm btn-secondary">Back</a></h2>
<form asp-action="AddMovie" method="post" id="form">
    <div class="form-group">
        <label for="movieName">Name:</label>
        <input class="form-control" name="movieName" />
    </div>

    <div class="form-group">
        <label for="description">Description:</label>
        <input class="form-control" name="description" />
    </div>

    @*add genre picker for easier interface*@
    <div class="form-group">
        <label for="movieGenre">Genre:</label>
        <select class="form-control" id="movieGenre" name="movieGenre">
            <option value="Action">Action</option>
            <option value="Adventure">Adventure</option>
            <option value="Comedy">Comedy</option>
            <option value="Romance">Romance</option>
            <option value="Thriller">Thriller</option>
        </select>
    </div>

    @*add date picker for better format - not functional in Firefox or Safari*@
    <div class="form-group">
        <label for="releaseDate">Release Date:</label>
        <input type="date" class="form-control" id="releaseDate" name="releaseDate" placeholder="dd/mm/yyyy" />
    </div>

    @*add age picker for easier interface*@
    <div class="form-group">
        <label for="ageRestriction">Age Restriction:</label>
        <select class="form-control" id="ageRestriction" name="ageRestriction">
            <option value="A">A</option>
            <option value="PG">PG</option>
            <option value="PG13">PG13</option>
            <option value="16">16</option>
            <option value="18">18</option>
        </select>
    </div>

    @*insert fields for actor list*@
    <div id="actorItemsContainer">
        @Html.EditorFor(model => model.topActors)
    </div>

    <div class="text-center panel-body">
        <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#addActorModal">Add Actor</button>
        <button type="submit" class="btn btn-sm btn-primary">Save</button>
    </div>
</form>


<!-- Modal -->
<div class="modal fade" id="addActorModal" tabindex="-1" role="dialog" aria-labelledby="addActorTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form class="modal-content" onsubmit="handleActorSubmit(event)">
                <div class="modal-header">
                        <h5 class="modal-title">Add Actor</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                    </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="form-group">
                      <label for="">Name</label>
                      <input type="text" name="name" id="actorName" class="form-control" placeholder="Actor Name">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Add Actor</button>
            </div>
        </form>
    </div>
</div>

@* <script>
    $('#exampleModal').on('show.bs.modal', event => {
        var button = $(event.relatedTarget);
        var modal = $(this);
        // Use above variables to manipulate the DOM
        
    });
</script> *@

@*Battling to get this working*@
@section scripts {
    <script type="text/javascript">
        var movie = {
            actors: []
        }

        async function handleActorSubmit(event) {
            event.preventDefault();

            var formData = new FormData(event.target);

            var name = formData.get('name');

            if (!movie.actors.includes(name)) {
                movie.actors.push(name);
            }

            updateMovieActors();
        }

        function updateMovieActors() {
            var actorItemsContainer = document.querySelector('#actorItemsContainer');

            movie.actors.forEach((name) => {
                var newInput = createActorInput(name);
                actorItemsContainer.appendChild(newInput);
            })
        }

        function createActorInput(name) {
            var input = document.createElement('input');
            input.type = 'text';
            input.disabled = true;
            input.value = name;
            return input;
        }

    </script>
}